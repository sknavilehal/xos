alias physicalSP S0;
physicalSP = ([PTBR + 2*(SP/512)]*512) + SP%512;

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

alias fileName S2;
fileName = [physicalSP - 3];

alias df_index S3;
alias fat_index S4;
alias k S5;

if(sysCallNo == 1) then

	// If file exists in FAT return 0
    df_index=0;
    fat_index = 0;
    while(fat_index < 64) do
	if(fileName == [FAT + fat_index*8]) then
	    [physicalSP - 2] = 0;
	    ireturn;
	endif;
	fat_index=fat_index+1;
    endwhile;
    
	// Store block number of free block in register. If no free entry found in disk free list return -1 
    df_index=24;
    while(df_index < 448 && [DISK_LIST + df_index] != 0) do
		df_index = df_index + 1;
    endwhile;
    if(df_index > 447) then
		[physicalSP - 2] = -1;
		ireturn;
    endif;

	// Store FAT index of free FAT entry. If not found return -1
    fat_index = 0;
    while(fat_index < 64 && [FAT + fat_index*8] != -1) do
	fat_index = fat_index + 1;
    endwhile;
    if(fat_index >= 64) then
		[physicalSP - 2] = -1;
		ireturn;
    endif;

	// Update FAT entry
    [FAT + fat_index*8] = fileName;
    [FAT + fat_index*8 + 1] = 0;
    [FAT + fat_index*8 + 2] = df_index;

	// Load basic block of new file in scratchpad and initialize all entries to empty string
    load(1,df_index);
    k=0;
    while(k < 512) do
		[SCRATCHPAD + k] = "";
		k = k+1;
    endwhile;

	
    [DISK_LIST + df_index] = 1;
    store(1,df_index);
    store(5,19);
    store(6,20);

    [physicalSP - 2] = 0;
endif; 

ireturn;

alias physicalSP S0;
alias newPID S1;
alias newPCB S2;
alias currentPID S3;
alias currentPCB S4;
alias newphysicalSP S5;

currentPID = (PTBR - PAGE_TABLE)/8;
currentPCB = READY_LIST + 32*currentPID;
physicalSP = ([PTBR + 6]*512) + SP%512;

newPID = (newPID + 1)%32;
newPCB = READY_LIST + 32*newPID;

[currentPCB + 1] = 1;
while([newPCB + 1] != 1) do
	newPID = (newPID + 1)%32;
	newPCB = READY_LIST + 32*newPID;
endwhile;

if(newPID == currentPID) then
	[currentPCB + 1] = 2;
	ireturn;
endif;

[currentPCB + 2] = SP - 1;
[currentPCB + 3] = BP;
[currentPCB + 4] = [physicalSP];
[currentPCB + 5] = PTBR;
[currentPCB + 6] = PTLR;
[currentPCB + 7] = R0;
[currentPCB + 8] = R1;
[currentPCB + 9] = R2;
[currentPCB + 10] = R3;
[currentPCB + 11] = R4;
[currentPCB + 12] = R5;
[currentPCB + 13] = R6;
[currentPCB + 14] = R7;

[newPCB + 1] = 2;
SP = [newPCB + 2];
BP = [newPCB + 3];
PTBR = [newPCB + 5];
PTLR = [newPCB + 6];
R0 = [newPCB + 7];
R1 = [newPCB + 8];
R2 = [newPCB + 9];
R3 = [newPCB + 10];
R4 = [newPCB + 11];
R5 = [newPCB + 12];
R6 = [newPCB + 13];
R7 = [newPCB + 14];

SP = SP + 1;
newphysicalSP = ([PTBR + 6]*512) + SP%512;
[newphysicalSP] = [newPCB + 4];

ireturn;

alias physicalSP S0;
alias sysCallNo S1;
alias fileDesc S2;
alias PID S3;
alias PCB S4;

physicalSP = [PTBR + 6]*512 + SP%512;
PID = (PTBR - PAGE_TABLE)/8;
PCB = READY_LIST + PID*32;

sysCallNo = [physicalSP - 1];
fileDesc = [physicalSP - 4];

if(sysCallNo == 6) then
	alias swoft_index S5;
	alias newLseek S6;
	alias fileSize S7;
	alias fat_index S8;

	newLseek = [physicalSP - 3];
	
	if(fileDesc > 7 || fileDesc < 0) then
		[physicalSP - 2] = -1;
		print("fail:3061");
		ireturn;
	endif;

	swoft_index = [PCB + 15 + fileDesc*2];
	if(swoft_index == -1) then
		[physicalSP - 2] = -1;
		print("fail:3062");
		ireturn;
	endif;

	fat_index = [FILE_TABLE + swoft_index*2];
	fileSize = [FAT + fat_index*8 + 1];

	if(newLseek >= fileSize) then
		[physicalSP - 2] = -1;
		print("fail:3063");
		ireturn;
	endif;

	[PCB + 15 + fileDesc*2 + 1] = newLseek;
	
	[physicalSP - 2] = 0;
endif;

if(sysCallNo == 7) then
	alias swoft_index S5;
	alias LSEEK S6;
	alias bb S7;
	alias db S8;
	alias fat_index S9;
	alias fileSize S10;

	if(fileDesc > 7 || fileDesc < 0) then
		[physicalSP - 2] = -1;
		print("fail:3071");
		ireturn;
	endif;

	swoft_index = [PCB + 15 + fileDesc*2];
	if(swoft_index == -1) then
		[physicalSP - 2] = -1;
		print("fail:3072");
		ireturn;
	endif;

	fat_index = [FILE_TABLE + swoft_index*2];
	fileSize = [FAT + fat_index*8 + 1];
	bb = [FAT + fat_index*8 + 2];

	LSEEK = [PCB + 15 + fileDesc*2 + 1];

	if(LSEEK >= fileSize) then
		[physicalSP - 2] = -1;
		print("fail:3073");
		ireturn;
	endif;

	load(1,bb);
	db = [SCRATCHPAD + LSEEK/512];
	load(1,db);

	[physicalSP - 3] = [SCRATCHPAD + LSEEK%512];
	LSEEK = LSEEK + 1;

	[PCB + 15 + fileDesc*2 + 1] = LSEEK;
	
	[physicalSP - 2] = 0;
endif;

ireturn;
